# This file contains pin mappings for the stock 2020 Creality Ender 3
# V2. To use this config, during "make menuconfig" select the
# STM32F103 with a "28KiB bootloader" and serial (on USART1 PA10/PA9)
# communication.

# If you prefer a direct serial connection, in "make menuconfig"
# select "Enable extra low-level configuration options" and select
# serial (on USART3 PB11/PB10), which is broken out on the 10 pin IDC
# cable used for the LCD module as follows:
# 3: Tx, 4: Rx, 9: GND, 10: VCC

# Flash this firmware by copying "out/klipper.bin" to a SD card and
# turning on the printer with the card inserted. The firmware
# filename must end in ".bin" and must not match the last filename
# that was flashed.

# See docs/Config_Reference.md for a description of parameters.

[stepper_x]
step_pin: PC2
dir_pin: PB9
enable_pin: !PC3
microsteps: 16
rotation_distance: 40
endstop_pin: ^PA5
position_endstop: 0
position_max: 235
homing_speed: 50

[stepper_y]
step_pin: PB8
dir_pin: PB7
enable_pin: !PC3
microsteps: 16
rotation_distance: 40
endstop_pin: ^PA6
position_endstop: 0
position_max: 235
homing_speed: 50

[stepper_z]
step_pin: PB6
dir_pin: !PB5
enable_pin: !PC3
microsteps: 16
rotation_distance: 8
endstop_pin: probe:z_virtual_endstop
position_max: 250
position_min: -10

[extruder]
max_extrude_only_distance: 100.0
step_pin: PB4
dir_pin: !PB3
enable_pin: !PC3
microsteps: 16
rotation_distance: 23.05202
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PA1
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC5
min_temp: 0
max_temp: 250

[heater_bed]
heater_pin: PA2
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC4
min_temp: 0
max_temp: 130
pwm_cycle_time: 0.01666

[fan]
pin: PA0

[mcu]
serial: /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
restart_method: command

[temperature_sensor creality_mcu]
sensor_type: temperature_mcu
sensor_mcu: mcu

# [mcu custom_board]
# serial: /dev/serial/by-id/usb-Klipper_stm32f405xx_250048001850304235343220-if00
# restart_method: command

# [adxl345]
# cs_pin: custom_board:PC4
# spi_bus: spi1

# [resonance_tester]
# accel_chip: adxl345
# probe_points: 100, 100, 20

# [temperature_sensor general_air]
# sensor_type: EPCOS 100K B57560G104F
# sensor_pin: custom_board:PC2
# min_temp: -273.15
# max_temp: 3000
# inline_resistor: 4700


[printer]
kinematics: cartesian
max_velocity: 750
max_accel: 7000
max_accel_to_decel: 7000
max_z_velocity: 5
max_z_accel: 100

# Apparently there's a temperature sensor in the actual chip?!
# [temperature_sensor custom_board_temp]
# sensor_type: temperature_mcu
# sensor_mcu: custom_board

# Trying my custom stuff
# [ccs811 chamber_env]
# i2c_mcu: custom_board

# Input Shaper

[input_shaper]
shaper_freq_x: 66.6
shaper_type_x: zv
shaper_freq_x: 46.15
shaper_freq_y: 42.37

[firmware_retraction]
retract_length: 2
retract_speed: 60
unretract_speed: 60

# CRTouch

[bltouch]
sensor_pin: ^PB1
control_pin: PB0
x_offset: 52
y_offset: -13
#z_offset: 0

[safe_z_home]
home_xy_position: 117.5,117.5 # Change coordinates to the center of your print bed
z_hop: 10                 # Move up 10mm
z_hop_speed: 5

[bed_mesh]
speed: 120
horizontal_move_z: 10
mesh_min: 52, 15
mesh_max: 220, 200
probe_count: 5,3
algorithm: bicubic
fade_start: 1
fade_end: 10
fade_target: 0

[screws_tilt_adjust]
screw1: 70.5,37.5
screw1_name: front left screw
screw2: 240,37.5
screw2_name: front right screw
screw3: 240,207.5
screw3_name: rear right screw
screw4: 70.5,207.5
screw4_name: rear left screw
horizontal_move_z: 10
speed: 50
screw_thread: CW-M4

# Done for Mainsail

[virtual_sdcard]
path: /tmp/gcode_files

[display_status]

[pause_resume]

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
    ##### set defaults #####
    {% set x = params.X|default(230) %}      #edit to your park position
    {% set y = params.Y|default(230) %}      #edit to your park position
    {% set z = params.Z|default(10)|float %} #edit to your park position
    {% set e = params.E|default(1) %}        #edit to your retract length
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% set lift_z = z|abs %}
    {% if act_z < (max_z - lift_z) %}
        {% set z_safe = lift_z %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
    PAUSE_BASE
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E-{e} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}
    {% if "xyz" in printer.toolhead.homed_axes %}    
      G1 Z{z_safe}
      G90
      G1 X{x} Y{y} F6000
    {% else %}
      {action_respond_info("Printer not homed")}
    {% endif %}

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
    ##### set defaults #####
    {% set e = params.E|default(1) %} #edit to your retract length
    #### get VELOCITY parameter if specified ####
    {% if 'VELOCITY' in params|upper %}
      {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
    {%else %}
      {% set get_params = "" %}
    {% endif %}
    ##### end of definitions #####
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E{e} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}  
    RESUME_BASE {get_params}

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
    TURN_OFF_HEATERS
    CANCEL_PRINT_BASE

[gcode_macro Z_CALIBRATE]
gcode:
  PROBE_CALIBRATE

[gcode_macro SET_OFFSET]
gcode:
  {% set OFFSET_Z = params.OFFSET_Z|default(0.0)|float %}
  SET_GCODE_OFFSET Z={OFFSET_Z} MOVE=1

[gcode_macro START_PRINT]
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(210)|float %}

    M140 S{BED_TEMP}
    G90
    G28
    SET_OFFSET
    G1 Z5 F5000
    G1 Z50 F300
    M190 S{BED_TEMP}
    M109 S{EXTRUDER_TEMP}

    G92 E0

    G1 X0.1 Y20 Z0.35 F5000
    G1 X0.1 Y200 Z0.35 F1500 E15
    G1 X1.0 Y200 Z0.35 F5000
    G1 X1.0 Y20 Z0.35 F1500 E30

    G92 E0

    G1 X50 Y50 Z20 F5000

    G4 P5000

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bltouch]
#*# z_offset = 2.560
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 26.721
#*# pid_ki = 1.605
#*# pid_kd = 111.226
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 69.631
#*# pid_ki = 1.652
#*# pid_kd = 733.732
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  -0.080000, -0.080000, -0.047500, -0.035000, -0.010000
#*# 	  -0.032500, -0.012500, 0.045000, 0.007500, -0.030000
#*# 	  -0.035000, -0.022500, 0.007500, 0.002500, -0.090000
#*# tension = 0.2
#*# min_x = 52.0
#*# algo = bicubic
#*# y_count = 3
#*# mesh_y_pps = 2
#*# min_y = 15.0
#*# x_count = 5
#*# max_y = 200.0
#*# mesh_x_pps = 2
#*# max_x = 220.0
#*#
#*# [bed_mesh DEFAULT]
#*# version = 1
#*# points =
#*# 	-0.007500, 0.010000, 0.022500, 0.045000, 0.017500
#*# 	0.022500, 0.090000, 0.125000, 0.107500, 0.000000
#*# 	0.005000, 0.077500, 0.107500, 0.105000, 0.015000
#*# tension = 0.2
#*# min_x = 52.0
#*# algo = bicubic
#*# y_count = 3
#*# mesh_y_pps = 2
#*# min_y = 15.0
#*# x_count = 5
#*# max_y = 200.0
#*# mesh_x_pps = 2
#*# max_x = 220.0
